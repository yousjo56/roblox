
-- Place this script in StarterGui as a LocalScript

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local UserInputService = game:GetService("UserInputService")

--// GUI Creation
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CustomGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 300, 0, 220)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -110)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Name = "MainFrame"
mainFrame.Parent = screenGui

-- Cancel Button
local cancelButton = Instance.new("TextButton")
cancelButton.Size = UDim2.new(0, 32, 0, 32)
cancelButton.Position = UDim2.new(1, -35, 0, 3)
cancelButton.BackgroundColor3 = Color3.fromRGB(255, 70, 70)
cancelButton.Text = "âœ•"
cancelButton.TextScaled = true
cancelButton.Name = "CancelButton"
cancelButton.Parent = mainFrame

-- Draggable Open Button (hidden at first)
local dragOpenButton = Instance.new("TextButton")
dragOpenButton.Size = UDim2.new(0, 56, 0, 56)
dragOpenButton.Position = UDim2.new(0, 10, 0, 10)
dragOpenButton.BackgroundColor3 = Color3.fromRGB(70, 170, 255)
dragOpenButton.Text = "Open"
dragOpenButton.TextScaled = true
dragOpenButton.Visible = false
dragOpenButton.Draggable = true
dragOpenButton.Name = "DragOpenButton"
dragOpenButton.Parent = screenGui

-- WalkSpeed Input
local wsLabel = Instance.new("TextLabel")
wsLabel.Size = UDim2.new(0, 120, 0, 28)
wsLabel.Position = UDim2.new(0, 20, 0, 55)
wsLabel.BackgroundTransparency = 1
wsLabel.Text = "WalkSpeed:"
wsLabel.TextColor3 = Color3.new(1,1,1)
wsLabel.TextScaled = true
wsLabel.Parent = mainFrame

local wsInput = Instance.new("TextBox")
wsInput.Size = UDim2.new(0, 80, 0, 28)
wsInput.Position = UDim2.new(0, 145, 0, 55)
wsInput.PlaceholderText = "16"
wsInput.Text = ""
wsInput.BackgroundColor3 = Color3.fromRGB(50,50,50)
wsInput.TextColor3 = Color3.new(1,1,1)
wsInput.TextScaled = true
wsInput.Parent = mainFrame

local wsButton = Instance.new("TextButton")
wsButton.Size = UDim2.new(0, 240, 0, 32)
wsButton.Position = UDim2.new(0, 30, 0, 95)
wsButton.BackgroundColor3 = Color3.fromRGB(0, 160, 90)
wsButton.Text = "Set WalkSpeed"
wsButton.TextScaled = true
wsButton.TextColor3 = Color3.new(1,1,1)
wsButton.Parent = mainFrame

-- Infinite Jump Button
local infJumpButton = Instance.new("TextButton")
infJumpButton.Size = UDim2.new(0, 240, 0, 32)
infJumpButton.Position = UDim2.new(0, 30, 0, 135)
infJumpButton.BackgroundColor3 = Color3.fromRGB(0, 120, 210)
infJumpButton.Text = "Toggle Infinite Jump"
infJumpButton.TextScaled = true
infJumpButton.TextColor3 = Color3.new(1,1,1)
infJumpButton.Parent = mainFrame

-- Fly Button
local flyButton = Instance.new("TextButton")
flyButton.Size = UDim2.new(0, 240, 0, 32)
flyButton.Position = UDim2.new(0, 30, 0, 175)
flyButton.BackgroundColor3 = Color3.fromRGB(200, 170, 0)
flyButton.Text = "Toggle Fly"
flyButton.TextScaled = true
flyButton.TextColor3 = Color3.new(1,1,1)
flyButton.Parent = mainFrame

--// Functionality
local infJumpEnabled = false
local jumpConnection = nil
local flyEnabled = false
local flyVelocity = nil
local flyGyro = nil

-- WalkSpeed Set
wsButton.MouseButton1Click:Connect(function()
    local speed = tonumber(wsInput.Text)
    if speed and player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        player.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = speed
    end
end)

-- Infinite Jump Toggle
infJumpButton.MouseButton1Click:Connect(function()
    infJumpEnabled = not infJumpEnabled
    infJumpButton.Text = infJumpEnabled and "Infinite Jump: ON" or "Toggle Infinite Jump"
    if infJumpEnabled then
        if not jumpConnection then
            jumpConnection = UserInputService.JumpRequest:Connect(function()
                if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                    player.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
                end
            end)
        end
    else
        if jumpConnection then
            jumpConnection:Disconnect()
            jumpConnection = nil
        end
    end
end)

-- Fly Toggle
local function startFly()
    local char = player.Character
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    flyVelocity = Instance.new("BodyVelocity")
    flyVelocity.Velocity = Vector3.new(0,0,0)
    flyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
    flyVelocity.Parent = hrp

    flyGyro = Instance.new("BodyGyro")
    flyGyro.CFrame = hrp.CFrame
    flyGyro.MaxTorque = Vector3.new(1e5,1e5,1e5)
    flyGyro.P = 1e4
    flyGyro.Parent = hrp

    -- Move logic
    spawn(function()
        while flyEnabled and flyVelocity and flyGyro do
            local cam = workspace.CurrentCamera
            local moveVec = Vector3.new()
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveVec = moveVec + cam.CFrame.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveVec = moveVec - cam.CFrame.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveVec = moveVec - cam.CFrame.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveVec = moveVec + cam.CFrame.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then moveVec = moveVec + Vector3.new(0,1,0) end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then moveVec = moveVec - Vector3.new(0,1,0) end
            if moveVec.Magnitude > 0 then
                moveVec = moveVec.Unit * 50
            end
            flyVelocity.Velocity = moveVec
            flyGyro.CFrame = cam.CFrame
            wait()
        end
    end)
end

local function stopFly()
    if flyVelocity then
        flyVelocity:Destroy()
        flyVelocity = nil
    end
    if flyGyro then
        flyGyro:Destroy()
        flyGyro = nil
    end
end

flyButton.MouseButton1Click:Connect(function()
    flyEnabled = not flyEnabled
    flyButton.Text = flyEnabled and "Fly: ON" or "Toggle Fly"
    if flyEnabled then
        startFly()
    else
        stopFly()
    end
end)

-- Cancel Button: Hide frame, show draggable open button
cancelButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
    dragOpenButton.Visible = true
end)

-- Open Button: Show frame, hide open button
dragOpenButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = true
    dragOpenButton.Visible = false
end)

-- Dragging for dragOpenButton (since Draggable doesn't always work on buttons)
local dragging, dragStart, startPos
dragOpenButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = dragOpenButton.Position
    end
end)
dragOpenButton.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        dragOpenButton.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)
UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Clean up on respawn
player.CharacterAdded:Connect(function()
    if infJumpEnabled and not jumpConnection then
        jumpConnection = UserInputService.JumpRequest:Connect(function()
            if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                player.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    end
    if flyEnabled then
        startFly()
    else
        stopFly()
    end
end)

-- Optional: Reset GUI if script runs again
for _, obj in ipairs(screenGui:GetChildren()) do
    if obj:IsA("Frame") or obj:IsA("TextButton") or obj:IsA("TextLabel") or obj:IsA("TextBox") then
        obj.Visible = true
    end
end
